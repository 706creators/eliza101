[
  {
    "title": "快速开始，构建一个 Telegram 的 Chatbot",
    "description": "本文介绍了如何从零开始构建一个 Telegram 聊天机器人。内容包括环境安装、NodeJS 配置、代码下载、启动流程、Telegram Bot 配置、模型选择、常见问题解决以及视频教程链接。",
    "id": "1-first-telegram-bot"
  },
  {
    "title": "Eliza 原理解析（上）：Agent 工具调用",
    "description": "本文介绍了Eliza框架中Provider和Action的运行原理。Provider用于获取特定领域的信息，解决通用大模型在信息获取上的不足；Action则封装了AI执行的代码，帮助AI理解并执行复杂任务。文章还探讨了如何通过Provider和Action的结合，让AI在链上操作中更高效地执行任务。",
    "id": "2-eliza-baiscs-call-tools"
  },
  {
    "title": "扩展 eliza : 构建你的第一个 Plugin",
    "description": "本文介绍了如何构建 eliza 插件，包括插件的基本结构、Action 和 Service 的定义与使用，以及插件在 runtime 中的调用方式。还详细说明了插件之间的互相调用方法，如调用其他插件的 Service 和 Action，以及 Provider 的使用。最后，提供了 plugin-sui 的演示和视频教程链接。",
    "id": "3-first-plugin-action"
  },
  {
    "title": "Eliza 知识库与记忆系统",
    "description": "Eliza 系统包含复杂的存储结构和缓存机制，支持多种数据库类型如 SQLite 和 Postgres。知识碎片通过 UUID 唯一标识，并分为文档管理和知识管理两部分处理。记忆系统通过 memoryManagers 管理不同类型的记忆，如消息、描述、知识等。系统还提供了 RAG 知识管理器用于高级知识处理。",
    "id": "4-custom-agent-withmemory"
  },
  {
    "title": "Run Eliza With Tee",
    "description": "介绍TEE的相关知识，以及如何使用TEE运行Eliza的AI Agent。",
    "id": "5-tee-and-eliza"
  }
]